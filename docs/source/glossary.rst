Glossary
========

.. glossary::
  :sorted:

  Token Expansion [#tool]_
    The name of the procedure called to substitute token patterns referenced in other tokens by their token identifier.
  
  Grammar Variables [#tool]_
    Variables created based on the symbols used in a :term:`grammar production`.
    These can be :term:`terminal variables <terminal variable >` or :term:`non-terminal variables <non-terminal variable >`.
    If the same symbol is used multiple times, then the variable will be a list of the occurrences.

  System Configuration [#tool]_
    The directory located at :code:`~/.serl` which is used to store system-wide languages and environments.
  
  Grammar Production
    A substitution rule with a head (non-terminal) and a body (sequence of terminals/non-terminals).
  
  Terminal
    A concrete symbol used within the syntax of a language.
  
  Token
    Synonymous with :term:`terminal`, but usually with some notion of type.

  Non-terminal
    A symbol used to represent a set of strings that can be generated by reducing it according to :term:`grammar productions <grammar production>`.
  
  Lexer
    A program used to break an input string up into syntactic units called :term:`tokens <token>`.

  Grammar
    A set of :term:`productions <grammar production>` used to specify the structure of a language.
  
  Parser
    A program used to verify the structure of a sequence of :term:`tokens <token>`, and create an intermediary representation such as an :term:`AST`
  
  AST
    Abstract syntax tree, the intermediary representation created after parsing.

  Panic-mode
    An error recovery strategy that pops symbols off the parsing stack until a state with a special error token is reached (by using the error token in :term:`grammar productions <grammar production>`).
    At this point any invalid :term:`token` is discarded until the next valid :term:`token` can be shifted onto the stack or the :term:`grammar production` can be reduced.
  
  Terminal Variable [#tool]_
    A tuple of regex captures for a specific token with the first element being the entire token match.
    This tuple object also has access to the :code:`lineno` and :code:`col` property which represent the line number and column of the token in source (1-indexed).

  Non-terminal Variable [#tool]_
    A function for a specific :term:`non-terminal` that can be used to traverse the :term:`AST`.
    This function will execute and return a value from the code block with the same name.

See `Compilers: Principles, Techniques, and Tools <https://www.google.co.uk/books/edition/Compilers/yHTLngEACAAJ>`_ to learn more terminology and methods relating to language compilers.

.. rubric:: Footnotes

.. [#tool] Term definition specific to this tool (Serl).
